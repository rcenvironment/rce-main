This file describes the directory structure of /src/test/resources and explains how to execute test workflows.

-----------------------------------
 Directory structure
-----------------------------------

 - workflows_automated_with_placeholders: contains workflow files which are automated and executed continuously and which run without any placeholders
 
 - workflows_automated_without_placeholders: contains workflow files which are automated and executed continuously and which require placeholders (see readme file in folder)

 - workflows_examples: contains workflow files which will be part of the workflow example project in RCE releases
 
 - workflows_test_unit: contains workflow files which are used for unit testing
 
 - workflows_manual: contains workflow files which can only be executed manually (for instructions see below)

 - workflows_manual.files: contains additional test files needed by some workflows for execution

-----------------------------------------------------
 How to execute test workflows of workflows_manual
-----------------------------------------------------

 - ToolIntegration.wf:
     Standalone RCE:   
        - Create a folder "doalot" in your RCE folder (right beside rce.exe)
		- Copy SirDoALot.png and SirDoALot.py from /src/test/resources/workflows_manual/files/ToolIntegration into this folder
		- Import /src/test/resources/workflows_manual/files/ToolIntegration/configuration.json with the tool integration wizard, do not change anything
		  (Import means opening the edit dialog and load a configuration, then press update)
		- Copy ToolIntegration.wf to a project folder of your choice within RCE and run it
		- Check if workflow becomes FINISHED
		- Check if there are no error log messages in Workflow Console View
	
	[From Eclipse: 
	    - Go into your launch settings folder (e.g. de.rcenvironment/utils/launch/default) and create the directories
	      ../configuration/integration/common/doalot
	    - Copy the configuration.json from /src/test/resources/workflows_manual/files/ToolIntegration/configuration.json into the
	      new doalot folder
	    - Create a folder "doalot" in your .../<RCE workspace>/<launch config name> folder and copy SirDoALot.png and SirDoALot.py there
	    - Start RCE, copy the Toolintegration.wf into a project and run it
	    - Check if workflow becomes FINISHED
		- Check if there are no error log messages in Workflow Console View
	]-> Currently not working due to changed launch configuration structure, needs to be updated! Workaround: Set the path to the tool directory in the configuration.json manually.  j.flink, nov. 2014
		
- CPACSToolIntegration.wf:
     Standalone RCE:   
		- Copy the folder /src/test/resources/workflows_manual/files/CPACSToolIntegration/SimpleCPACSTool into your RCE folder (right beside rce.exe)
		- Import /src/test/resources/workflows_manual/files/CPACSToolIntegration/configuration.json with the tool integration wizard, do not change anything
		  (Import means opening the edit dialog and load a configuration, then press update)
		- Copy CPACsToolIntegration.wf to a project folder of your choice within RCE and run it
		- Check if workflow becomes FINISHED
		- Check if there are no error log messages in Workflow Console View
		- Check the Workflow Data Browser for Inputs, Outputs, Intermediate Inputs, Tool Input/Output of the Simple CPACS Tool in the corresponding workflow run.
	
	[From Eclipse: 
	    - Go into your launch settings folder (e.g. de.rcenvironment/utils/launch/default) and create the directories
	      ../configuration/integration/cpacs/SimpleCPACSTool
	    - Copy the configuration.json from /src/test/resources/workflows_manual/files/CPACSToolIntegration/configuration.json into the
	      new SimpleCPACSTool folder
	    - Copy the folder src/test/resources/workflows_manual/files/CPACSToolIntegration/SimpleCPACSTool in your .../<RCE workspace>/<launch config name> folder
	    - Start RCE, copy the CPACSToolintegration.wf into a project and run it
	    - Check if workflow becomes FINISHED
		- Check if there are no error log messages in Workflow Console View
		- Check the Workflow Data Browser for Inputs, Outputs, Intermediate Inputs, Tool Input/Output of the Simple CPACS Tool in the corresponding workflow run.
	]-> Currently not working due to changed launch configuration structure, needs to be updated! Workaround: Set the path to the tool directory in the configuration.json manually.  j.flink, nov. 2014
      