{
  "identifier" : "463e056b-fddf-4bef-9607-4d0736997bd8",
  "workflowVersion" : "5",
  "nodes" : [ {
    "identifier" : "1e5df268-e2d6-485b-9de6-17e2e27a015e",
    "name" : "Input Provider",
    "location" : "124:173",
    "zIndex" : "3",
    "active" : "true",
    "component" : {
      "identifier" : "de.rcenvironment.inputprovider",
      "version" : "3.2",
      "name" : "Input Provider"
    },
    "configuration" : {
      "input" : "${input}",
      "input_datatype_799ef365" : "float"
    },
    "dynamicOutputs" : [ {
      "identifier" : "32fcbdaa-1802-4cea-b3d9-51fe1cc6e49b",
      "name" : "input",
      "epIdentifier" : "default",
      "datatype" : "Float",
      "metadata" : {
        "fileSourceType" : "atWorkflowStart",
        "startValue" : "${input}"
      }
    } ]
  }, {
    "identifier" : "b224dc67-a9b9-4e07-83ad-f451bb968b53",
    "name" : "Joiner",
    "location" : "676:173",
    "zIndex" : "0",
    "active" : "true",
    "component" : {
      "identifier" : "de.rcenvironment.joiner",
      "version" : "3.3",
      "name" : "Joiner"
    },
    "configuration" : {
      "datatype" : "Float",
      "inputCount" : "2"
    },
    "dynamicInputs" : [ {
      "identifier" : "2acb0573-224d-46d6-8ee7-1a01badf3268",
      "name" : "Input 001",
      "epIdentifier" : "toJoin",
      "group" : "join",
      "datatype" : "Float"
    }, {
      "identifier" : "5b361f0d-d898-4a49-aaff-fd39c9e6e4d4",
      "name" : "Input 002",
      "epIdentifier" : "toJoin",
      "group" : "join",
      "datatype" : "Float"
    } ],
    "staticOutputs" : [ {
      "identifier" : "659f10f3-977f-4300-bee6-16e8a42bd32a",
      "name" : "Joined",
      "datatype" : "Float"
    } ]
  }, {
    "identifier" : "d75370e1-4178-4575-a370-de2724029a56",
    "name" : "Output Writer",
    "location" : "959:173",
    "zIndex" : "1",
    "active" : "true",
    "component" : {
      "identifier" : "de.rcenvironment.outputwriter",
      "version" : "2.1",
      "name" : "Output Writer"
    },
    "configuration" : {
      "OWWritePath" : "${targetRootFolder}",
      "OverwriteFilesAndDirs" : "false",
      "SelectRootOnWorkflowStart" : "true",
      "SelectedRoot" : "",
      "outputLocations" : "{\"outputs\":[{\"identifier\":\"8215aa2d-dae5-4328-8080-5a751c74ef6c\",\"filename\":\"[Workflow name] - [Timestamp at workflow start]\",\"folderForSaving\":\"[root]\",\"header\":\"Output value\",\"formatString\":\"[output]\",\"handleExistingFile\":\"APPEND\",\"inputs\":[\"output\"]}]}"
    },
    "dynamicInputs" : [ {
      "identifier" : "da5ca372-ca26-4068-8cb6-990d03f944a7",
      "name" : "output",
      "epIdentifier" : "default",
      "group" : "8215aa2d-dae5-4328-8080-5a751c74ef6c",
      "datatype" : "Float",
      "metadata" : {
        "filename" : "-",
        "folderForSaving" : "-",
        "inputExecutionConstraint_4aae3eea" : "Required",
        "inputHandling_73b1056e" : "Queue"
      }
    } ],
    "dynamicInputGroups" : [ {
      "name" : "8215aa2d-dae5-4328-8080-5a751c74ef6c",
      "epIdentifier" : "dynamicAndGroup"
    } ]
  }, {
    "identifier" : "39bbbd80-9190-46ab-b9c5-1ad442811e16",
    "name" : "Switch",
    "location" : "400:173",
    "zIndex" : "2",
    "active" : "true",
    "component" : {
      "identifier" : "de.rcenvironment.switchcmp",
      "version" : "2.0",
      "name" : "Switch"
    },
    "configuration" : {
      "closeOutputsOnConditionNumber" : "false",
      "closeOutputsOnNoMatch" : "false",
      "conditionKey" : "[{\"conditionNumber\":1,\"conditionScript\":\"To_forward < 5\"}]",
      "neverCloseOutputs" : "true",
      "scriptErrorMessage" : "",
      "selectedCondition" : "0",
      "storeComponentHistoryData" : "true",
      "writeOutputKey" : "false"
    },
    "dynamicInputs" : [ {
      "identifier" : "bd9bc1a0-32fa-4843-948e-eece18d81a2e",
      "name" : "To_forward",
      "epIdentifier" : "dataToInput",
      "datatype" : "Float",
      "metadata" : {
        "inputExecutionConstraint_4aae3eea" : "Required",
        "inputHandling_73b1056e" : "Queue"
      }
    } ],
    "dynamicOutputs" : [ {
      "identifier" : "710b828b-aeef-45f1-9b64-5f025a1f5064",
      "name" : "To_forward_condition 1",
      "epIdentifier" : "dataToOutput",
      "datatype" : "Float",
      "metadata" : {
        "inputExecutionConstraint_4aae3eea" : "Required",
        "inputHandling_73b1056e" : "Queue"
      }
    }, {
      "identifier" : "1da87ca8-3923-4b2a-96ac-e550d92da590",
      "name" : "To_forward_no match",
      "epIdentifier" : "dataToOutput",
      "datatype" : "Float",
      "metadata" : {
        "inputExecutionConstraint_4aae3eea" : "Required",
        "inputHandling_73b1056e" : "Queue"
      }
    } ]
  } ],
  "connections" : [ {
    "source" : "1e5df268-e2d6-485b-9de6-17e2e27a015e",
    "output" : "32fcbdaa-1802-4cea-b3d9-51fe1cc6e49b",
    "target" : "39bbbd80-9190-46ab-b9c5-1ad442811e16",
    "input" : "bd9bc1a0-32fa-4843-948e-eece18d81a2e"
  }, {
    "source" : "b224dc67-a9b9-4e07-83ad-f451bb968b53",
    "output" : "659f10f3-977f-4300-bee6-16e8a42bd32a",
    "target" : "d75370e1-4178-4575-a370-de2724029a56",
    "input" : "da5ca372-ca26-4068-8cb6-990d03f944a7"
  }, {
    "source" : "39bbbd80-9190-46ab-b9c5-1ad442811e16",
    "output" : "710b828b-aeef-45f1-9b64-5f025a1f5064",
    "target" : "b224dc67-a9b9-4e07-83ad-f451bb968b53",
    "input" : "2acb0573-224d-46d6-8ee7-1a01badf3268"
  }, {
    "source" : "39bbbd80-9190-46ab-b9c5-1ad442811e16",
    "output" : "1da87ca8-3923-4b2a-96ac-e550d92da590",
    "target" : "b224dc67-a9b9-4e07-83ad-f451bb968b53",
    "input" : "5b361f0d-d898-4a49-aaff-fd39c9e6e4d4"
  } ],
  "labels" : "[{\"identifier\":\"7a62fd40-a82d-458a-883a-c48d79a24604\",\"headerText\":\"Joiner\",\"text\":\"The Joiner joins multiple connections into one. Data received at its inputs is forwarded to one single output. Thereby, data isn't merged. This is especially useful, if you want to connect multiple outputs to a single input. It is not allowed to do that directly, but with the Joiner it can be achieved though.\\r\\n\",\"location\":\"577:239\",\"size\":\"236:328\",\"alpha\":\"204\",\"colorHeader\":\"0:0:0\",\"colorText\":\"0:0:0\",\"colorBackground\":\"0:255:64\",\"labelPosition\":\"TOPCENTER\",\"textAlignmentType\":\"LEFT\",\"headerAlignmentType\":\"CENTER\",\"border\":\"false\",\"headerSize\":\"11\",\"textSize\":\"9\",\"zIndex\":\"0\"},{\"identifier\":\"83b082bc-a146-431b-b63f-b2678567a7d6\",\"headerText\":\"Introduce workflow components of the group 'Data Flow'\",\"text\":\"Workflow components of the group \\\"Data Flow\\\" redirect, load or save data in a workflow.\",\"location\":\"244:35\",\"size\":\"655:103\",\"alpha\":\"204\",\"colorHeader\":\"0:0:0\",\"colorText\":\"0:0:0\",\"colorBackground\":\"0:255:64\",\"labelPosition\":\"CENTER\",\"textAlignmentType\":\"LEFT\",\"headerAlignmentType\":\"CENTER\",\"border\":\"false\",\"headerSize\":\"11\",\"textSize\":\"9\",\"zIndex\":\"1\"},{\"identifier\":\"84ed7697-b0e3-4248-93fc-bd3ff66711cb\",\"headerText\":\"Switch\",\"text\":\"The Switch component allows to direct the data flow within a workflow. Data received here are forwarded to at least one output. It depends on user-specified conditions (boolean expressions) to which output the values are forwarded. For each condition there is an associated output. If no condition evaluates to 'true', the data is forwarded to an additional output with the name '_no match'. Received input values (of primitive data types) and so-called condition inputs can be used in the conditions. The condition inputs will not be forwarded in the workflow.\\r\\n\",\"location\":\"307:239\",\"size\":\"223:328\",\"alpha\":\"204\",\"colorHeader\":\"0:0:0\",\"colorText\":\"0:0:0\",\"colorBackground\":\"0:255:64\",\"labelPosition\":\"TOPCENTER\",\"textAlignmentType\":\"LEFT\",\"headerAlignmentType\":\"CENTER\",\"border\":\"false\",\"headerSize\":\"11\",\"textSize\":\"9\",\"zIndex\":\"2\"},{\"identifier\":\"b5a98dbf-9c12-492a-a73f-a181e0abdafd\",\"headerText\":\"Input Provider\",\"text\":\"The Input Provider generates input values. It can send data of different data types. In many cases, it marks the start of a workflow. You can either define the values to send in the workflow component's properties or define them at workflows start. The latter option is used here. In the workflow execution dialog, go to the second page and define the value (in this case of type Float).\",\"location\":\"31:239\",\"size\":\"224:328\",\"alpha\":\"204\",\"colorHeader\":\"0:0:0\",\"colorText\":\"0:0:0\",\"colorBackground\":\"0:255:64\",\"labelPosition\":\"TOPCENTER\",\"textAlignmentType\":\"LEFT\",\"headerAlignmentType\":\"CENTER\",\"border\":\"false\",\"headerSize\":\"11\",\"textSize\":\"9\",\"zIndex\":\"3\"},{\"identifier\":\"d0342990-028a-48d8-9d8b-2b0028e97b85\",\"headerText\":\"Output Writer\",\"text\":\"The Output Writer writes files or directories received from other workflow components to the filesystem. If, like in this example workflow, your workflow components produce output values of primitive data types (like Float or Short Text), you can use the Output Writer to write one or multiple output values into one single file. The format of the file is defined in the 'Targets' table in the Output Writer properties tab.\",\"location\":\"857:239\",\"size\":\"245:328\",\"alpha\":\"204\",\"colorHeader\":\"0:0:0\",\"colorText\":\"0:0:0\",\"colorBackground\":\"0:255:64\",\"labelPosition\":\"TOPCENTER\",\"textAlignmentType\":\"LEFT\",\"headerAlignmentType\":\"CENTER\",\"border\":\"false\",\"headerSize\":\"11\",\"textSize\":\"9\",\"zIndex\":\"4\"}]"
}